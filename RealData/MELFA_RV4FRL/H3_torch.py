# Copyright (C) 2024 Mitsubishi Electric Research Laboratories (MERL)
#
# SPDX-License-Identifier: AGPL-3.0-or-later
import torch
from torch import cos, sin


def H3(X, pos_dim, vel_dim, acc_dim, dtype, device):
    q = X[:, pos_dim]
    dq = X[:, vel_dim]
    ddq = X[:, acc_dim]
    #
    H_num = torch.zeros([q.shape[0], 62], dtype=dtype, device=device)
    #
    x0 = torch.sin(q[:, 1])
    x1 = torch.cos(q[:, 1])
    x2 = dq[:, 0] * x1
    x3 = dq[:, 1] * x2
    x4 = ddq[:, 0] * x0
    x5 = x3 + x4
    x6 = dq[:, 0] * x0
    x7 = dq[:, 1] * x6
    x8 = -dq[:, 1]
    x9 = x6 * x8
    x10 = ddq[:, 0] * x1
    x11 = x10 + x9
    x12 = x2 * x6
    x13 = x0 * (ddq[:, 1] + x12)
    x14 = dq[:, 1] ** 2
    x15 = x6**2
    x16 = -x15
    x17 = -x3
    x18 = x2**2
    x19 = -x14
    x20 = -x12
    x21 = 0.31 * x2
    x22 = x2 * x21
    x23 = -0.31 * x6
    x24 = x23 * x6
    x25 = -x18
    x26 = -ddq[:, 1]
    x27 = -0.31 * x0
    x28 = x21 * x8
    x29 = 9.81 * x1 + x28 - 0.31 * x4
    x30 = dq[:, 1] * x23
    x31 = 9.81 * x0 + 0.31 * x10 + x30
    x32 = x1 * (-x30 + x31)
    x33 = x11 + x7
    x34 = dq[:, 1] * x21 + x29
    x35 = torch.cos(q[:, 2])
    x36 = torch.sin(q[:, 2])
    x37 = -x36
    x38 = x2 * x35 + x37 * x6
    x39 = -dq[:, 2]
    x40 = -x39
    x41 = x11 * x36 + x35 * x5 + x38 * x40
    x42 = x2 * x36 + x35 * x6
    x43 = x39 + x8
    x44 = x42 * x43
    x45 = -x44
    x46 = x38 * x42
    x47 = -x46
    x48 = -ddq[:, 2] + x26
    x49 = x47 + x48
    x50 = x42**2
    x51 = x43**2
    x52 = -x51
    x53 = x50 + x52
    x54 = x11 * x35 + x37 * x5 + x39 * x42
    x55 = x44 + x54
    x56 = x38 * x43
    x57 = -x56
    x58 = x41 + x57
    x59 = x38**2
    x60 = -x59
    x61 = x51 + x60
    x62 = x46 + x48
    x63 = x35 * x62
    x64 = x21 * x35 + x23 * x36
    x65 = x38 * x64
    x66 = x21 * x37 + x23 * x35
    x67 = -x66
    x68 = x42 * x67 + x65
    x69 = x52 + x60
    x70 = -x48
    x71 = x46 + x70
    x72 = x43 * x64
    x73 = x29 * x35 + x31 * x37 + x39 * x64
    x74 = -x72 + x73
    x75 = x35 * x74
    x76 = x29 * x36 + x31 * x35 + x40 * x66
    x77 = x43 * x67 - x76
    x78 = x44 - x54
    x79 = x41 + x56
    x80 = x42 * x66 - x65
    x81 = -x50
    x82 = x52 + x81
    x83 = x43 * x66 + x76
    x84 = torch.cos(q[:, 3])
    x85 = x41 * x84
    x86 = torch.sin(q[:, 3])
    x87 = x48 * x86
    x88 = x42 * x86
    x89 = x43 * x84
    x90 = x88 - x89
    x91 = -dq[:, 3]
    x92 = x85 + x87 + x90 * x91
    x93 = x42 * x84
    x94 = x43 * x86
    x95 = x93 + x94
    x96 = dq[:, 3] + x38
    x97 = x95 * x96
    x98 = -x97
    x99 = x84 * x92 + x86 * x98
    x100 = x90 * x95
    x101 = ddq[:, 3] + x54
    x102 = -x90
    x103 = x102 * x95
    x104 = x101 + x103
    x105 = x95**2
    x106 = x96**2
    x107 = -x106
    x108 = x105 + x107
    x109 = x104 * x84 + x108 * x86
    x110 = x90 * x96
    x111 = x110 + x92
    x112 = x41 * x86
    x113 = x48 * x84
    x114 = dq[:, 3] * x95 + x112 - x113
    x115 = x114 + x97
    x116 = x102 * x96
    x117 = x116 + x92
    x118 = x115 * x84 + x117 * x86
    x119 = x90**2
    x120 = -x105
    x121 = x119 + x120
    x122 = x116 * x84 + x86 * x97
    x123 = -x119
    x124 = x106 + x123
    x125 = x100 + x101
    x126 = x125 * x86
    x127 = x124 * x84 + x126
    x128 = x114 + x98
    x129 = x110 * x84 + x114 * x86
    x130 = x64 * x84 - 0.17415 * x88 + 0.17415 * x89
    x131 = x64 * x86 + 0.17415 * x93 + 0.17415 * x94
    x132 = -x131
    x133 = x130 * x90 + x132 * x95 + x73
    x134 = x100 - x101
    x135 = 0.17415 * x84
    x136 = x107 + x123
    x137 = x133 * x86 + x134 * x135 - 0.17415 * x136 * x86
    x138 = dq[:, 3] * x130 + x76 * x86 + 0.17415 * x85 + 0.17415 * x87
    x139 = -x138
    x140 = x130 * x96
    x141 = x139 + x140 + x67 * x95
    x142 = x134 * x86
    x143 = x136 * x84 + x142
    x144 = x138 - x140 + x66 * x95
    x145 = -0.17415 * x112 + 0.17415 * x113 + x131 * x91 + x76 * x84
    x146 = x132 * x96 - x145 + x66 * x90
    x147 = -x114
    x148 = x147 + x97
    x149 = x111 * x135 + x144 * x84 + x146 * x86 - 0.17415 * x148 * x86
    x150 = x111 * x86
    x151 = x148 * x84 + x150
    x152 = x120 + x123
    x153 = -x73
    x154 = x102 * x130 + x131 * x95 + x153
    x155 = x107 + x120
    x156 = -0.17415 * x126 + x135 * x155 + x154 * x84
    x157 = x102 * x66 + x131 * x96 + x145
    x158 = x155 * x86
    x159 = x125 * x84 + x158
    x160 = x110 - x92
    x161 = x135 * x144 - 0.17415 * x157 * x86
    x162 = x144 * x86
    x163 = x157 * x84 + x162
    x164 = torch.cos(q[:, 4])
    x165 = x164 * x95
    x166 = torch.sin(q[:, 4])
    x167 = x166 * x96
    x168 = x165 + x167
    x169 = x164 * x96
    x170 = x166 * x95
    x171 = x169 - x170
    x172 = x168 * x171
    x173 = -x172
    x174 = x164 * x92
    x175 = x101 * x166
    x176 = -dq[:, 4]
    x177 = -x176
    x178 = x171 * x177 + x174 + x175
    x179 = -x166
    x180 = x102 + x176
    x181 = x168 * x180
    x182 = -x181
    x183 = x164 * x178 + x179 * x182
    x184 = x173 * x86 + x183 * x84
    x185 = x164 * x182 + x166 * x178
    x186 = x171 * x180
    x187 = x178 + x186
    x188 = -x187
    x189 = -ddq[:, 4] + x147
    x190 = x173 + x189
    x191 = x168**2
    x192 = x180**2
    x193 = -x192
    x194 = x191 + x193
    x195 = x164 * x190 + x179 * x194
    x196 = x188 * x86 + x195 * x84
    x197 = x164 * x194 + x166 * x190
    x198 = x171**2
    x199 = -x191
    x200 = -x198 - x199
    x201 = x101 * x164
    x202 = x168 * x176 + x179 * x92 + x201
    x203 = x181 + x202
    x204 = -x186
    x205 = x178 + x204
    x206 = x164 * x203 + x179 * x205
    x207 = x200 * x86 + x206 * x84
    x208 = x164 * x205 + x166 * x203
    x209 = -x189
    x210 = x164 * x204 + x179 * x181
    x211 = x209 * x86 + x210 * x84
    x212 = x164 * x181 + x166 * x204
    x213 = -x182 - x202
    x214 = -x198
    x215 = x192 + x214
    x216 = x172 + x189
    x217 = x164 * x215 + x179 * x216
    x218 = x213 * x86 + x217 * x84
    x219 = x164 * x216
    x220 = x166 * x215 + x219
    x221 = -x173
    x222 = x164 * x186 + x179 * x202
    x223 = x221 * x86 + x222 * x84
    x224 = x164 * x202 + x166 * x186
    x225 = x130 * x164 + x166 * x66 + 0.021 * x169 - 0.021 * x170
    x226 = x145 * x179 + x164 * x73 - 0.021 * x174 - 0.021 * x175 + x176 * x225
    x227 = -x226
    x228 = x180 * x225
    x229 = -x168
    x230 = -x132 * x229 - x227 - x228
    x231 = x171 * x225
    x232 = x130 * x179 + x164 * x66 - 0.021 * x165 - 0.021 * x167
    x233 = x139 + x229 * x232 + x231
    x234 = x193 + x214
    x235 = -0.021 * x166
    x236 = x172 + x209
    x237 = x164 * x236
    x238 = x179 * x233 + x234 * x235 - 0.021 * x237
    x239 = -x203
    x240 = x164 * x234
    x241 = x179 * x236 + x240
    x242 = x135 * x239 + x230 * x86 + x238 * x84 - 0.17415 * x241 * x86
    x243 = x164 * x233 + x235 * x236 + 0.021 * x240
    x244 = x239 * x86
    x245 = x241 * x84 + x244
    x246 = x166 * x234 + x237
    x247 = x132 * x168 + x226 - x228
    x248 = x164 * x247
    x249 = x145 * x164 + x166 * x73 + x177 * x232 + 0.021 * x201 + x235 * x92
    x250 = x132 * x171
    x251 = x180 * x232
    x252 = -x249 + x250 - x251
    x253 = x181 - x202
    x254 = x164 * x187
    x255 = x179 * x252 + x235 * x253 + x248 - 0.021 * x254
    x256 = -x199 - x214
    x257 = x164 * x253
    x258 = x179 * x187 + x257
    x259 = x135 * x256 + x255 * x84 - 0.17415 * x258 * x86
    x260 = x164 * x252 + x166 * x247 + x187 * x235 + 0.021 * x257
    x261 = x256 * x86
    x262 = x258 * x84 + x261
    x263 = x166 * x253 + x254
    x264 = x249 - x250 + x251
    x265 = -x264
    x266 = -x139 + x168 * x232 - x231
    x267 = x193 + x199
    x268 = x164 * x267
    x269 = x164 * x266 + x216 * x235 - 0.021 * x268
    x270 = x178 - x186
    x271 = x179 * x267 + x219
    x272 = x135 * x270 + x265 * x86 + x269 * x84 - 0.17415 * x271 * x86
    x273 = x166 * x266 + 0.021 * x219 + x235 * x267
    x274 = x270 * x86
    x275 = x271 * x84 + x274
    x276 = x166 * x216 + x268
    x277 = x235 * x264 - 0.021 * x248
    x278 = -x233
    x279 = x164 * x264
    x280 = x179 * x247 + x279
    x281 = x135 * x278 + x277 * x84 - 0.17415 * x280 * x86
    x282 = x235 * x247 + 0.021 * x279
    x283 = x278 * x86
    x284 = x280 * x84 + x283
    x285 = x166 * x264 + x248
    x286 = torch.cos(q[:, 5])
    x287 = x168 * x286
    x288 = torch.sin(q[:, 5])
    x289 = x180 * x288
    x290 = x287 + x289
    x291 = dq[:, 5] + x171
    x292 = x290 * x291
    x293 = x178 * x286
    x294 = x189 * x288
    x295 = x180 * x286
    x296 = x168 * x288
    x297 = x295 - x296
    x298 = dq[:, 5] * x297 + x293 + x294
    x299 = -x286 * x292 - x288 * x298
    x300 = -x288
    x301 = x286 * x298 + x292 * x300
    x302 = x290 * x297
    x303 = -x302
    x304 = x164 * x301 + x179 * x303
    x305 = x299 * x86 + x304 * x84
    x306 = x164 * x303 + x166 * x301
    x307 = -x292
    x308 = x189 * x286
    x309 = -dq[:, 5]
    x310 = x178 * x300 + x290 * x309 + x308
    x311 = x307 + x310
    x312 = x291 * x297
    x313 = x298 + x312
    x314 = -x286 * x313 - x288 * x311
    x315 = x286 * x311 + x300 * x313
    x316 = x290**2
    x317 = x297**2
    x318 = -x317
    x319 = x316 + x318
    x320 = x164 * x315 + x179 * x319
    x321 = x314 * x86 + x320 * x84
    x322 = x164 * x319 + x166 * x315
    x323 = ddq[:, 5] + x202
    x324 = x302 + x323
    x325 = x288 * x324
    x326 = x291**2
    x327 = -x316
    x328 = x326 + x327
    x329 = -x286 * x328 - x325
    x330 = x286 * x324
    x331 = x300 * x328 + x330
    x332 = -x312
    x333 = x298 + x332
    x334 = x164 * x331 + x179 * x333
    x335 = x329 * x86 + x334 * x84
    x336 = x164 * x333 + x166 * x331
    x337 = -x286 * x310 - x288 * x332
    x338 = x286 * x332 + x300 * x310
    x339 = x164 * x338 + x179 * x302
    x340 = x337 * x86 + x339 * x84
    x341 = x164 * x302 + x166 * x338
    x342 = -x326
    x343 = x317 + x342
    x344 = x303 + x323
    x345 = -x286 * x344 - x288 * x343
    x346 = x286 * x343 + x300 * x344
    x347 = x292 + x310
    x348 = x164 * x346 + x179 * x347
    x349 = x345 * x86 + x348 * x84
    x350 = x164 * x347 + x166 * x346
    x351 = -x286 * x307 - x288 * x312
    x352 = x286 * x312 + x300 * x307
    x353 = x164 * x352 + x179 * x323
    x354 = x351 * x86 + x353 * x84
    x355 = x164 * x323 + x166 * x352
    x356 = x132 * x288 + x225 * x286 + 0.085 * x295 - 0.085 * x296
    x357 = x297 * x356
    x358 = -x290
    x359 = x132 * x286 + x225 * x300 - 0.085 * x287 - 0.085 * x289
    x360 = x227 + x357 + x358 * x359
    x361 = x318 + x342
    x362 = x286 * x361
    x363 = -x286 * x360 + 0.085 * x325 - 0.085 * x362
    x364 = -0.085 * x288
    x365 = x300 * x360 - 0.085 * x330 + x361 * x364
    x366 = x291 * x356
    x367 = x139 * x286 + x249 * x300 - 0.085 * x293 - 0.085 * x294 + x309 * x356
    x368 = x232 * x358 + x366 + x367
    x369 = x292 - x310
    x370 = x164 * x369
    x371 = x300 * x324 + x362
    x372 = x164 * x365 + x179 * x368 + x235 * x371 - 0.021 * x370
    x373 = -x288 * x361 - x330
    x374 = x164 * x371
    x375 = x179 * x369 + x374
    x376 = x135 * x373 + x363 * x86 + x372 * x84 - 0.17415 * x375 * x86
    x377 = x164 * x368 + x166 * x365 + x235 * x369 + 0.021 * x374
    x378 = x373 * x86
    x379 = x375 * x84 + x378
    x380 = x166 * x371 + x370
    x381 = x226 + x290 * x359 - x357
    x382 = x302 - x323
    x383 = x286 * x382
    x384 = x327 + x342
    x385 = -x288 * x381 - x364 * x384 - 0.085 * x383
    x386 = x286 * x384
    x387 = x286 * x381 + x364 * x382 - 0.085 * x386
    x388 = dq[:, 5] * x359 + x139 * x288 + x178 * x364 + x249 * x286 + 0.085 * x308
    x389 = x291 * x359
    x390 = x232 * x297
    x391 = -x388 + x389 - x390
    x392 = x164 * x313
    x393 = x300 * x384 + x383
    x394 = x164 * x387 + x179 * x391 + x235 * x393 - 0.021 * x392
    x395 = -x288 * x382 - x386
    x396 = x164 * x393
    x397 = x179 * x313 + x396
    x398 = x135 * x395 + x385 * x86 + x394 * x84 - 0.17415 * x397 * x86
    x399 = x164 * x391 + x166 * x387 + x235 * x313 + 0.021 * x396
    x400 = x395 * x86
    x401 = x397 * x84 + x400
    x402 = x166 * x393 + x392
    x403 = x232 * x290 - x366 - x367
    x404 = x388 - x389 + x390
    x405 = x286 * x404
    x406 = x286 * x347
    x407 = -x298 + x312
    x408 = -x288 * x403 - x364 * x407 - x405 - 0.085 * x406
    x409 = x286 * x407
    x410 = x286 * x403 + x300 * x404 + x347 * x364 - 0.085 * x409
    x411 = x318 + x327
    x412 = x164 * x411
    x413 = x300 * x407 + x406
    x414 = x164 * x410 + x235 * x413 - 0.021 * x412
    x415 = -x288 * x347 - x409
    x416 = x164 * x413
    x417 = x179 * x411 + x416
    x418 = x135 * x415 + x408 * x86 + x414 * x84 - 0.17415 * x417 * x86
    x419 = x166 * x410 + x235 * x411 + 0.021 * x416
    x420 = x415 * x86
    x421 = x417 * x84 + x420
    x422 = x166 * x413 + x412
    x423 = -x364 * x368 - 0.085 * x405
    x424 = x286 * x368
    x425 = x364 * x404 - 0.085 * x424
    x426 = x164 * x381
    x427 = x300 * x368 + x405
    x428 = x164 * x425 + x235 * x427 - 0.021 * x426
    x429 = -x288 * x404 - x424
    x430 = x164 * x427
    x431 = x179 * x381 + x430
    x432 = x135 * x429 + x423 * x86 + x428 * x84 - 0.17415 * x431 * x86
    x433 = x166 * x425 + x235 * x381 + 0.021 * x430
    x434 = x429 * x86
    x435 = x431 * x84 + x434
    x436 = x166 * x427 + x426
    x437 = -x79
    x438 = -x59 - x81
    x439 = -x45 - x54
    x440 = -x47
    x441 = -x153 - x72
    x442 = -x83
    x443 = -x84
    x444 = -x443 * x98 - x86 * x92
    x445 = -x104 * x86 - x108 * x443
    x446 = -x115 * x86 - x117 * x443
    x447 = -x116 * x86 - x443 * x97
    x448 = -x124 * x86 - x125 * x443
    x449 = -x110 * x86 - x147 * x84
    x450 = -x133 * x443 - x135 * x136 - 0.17415 * x142
    x451 = -x135 * x148 - x146 * x443 - 0.17415 * x150 - x162
    x452 = -x125 * x135 - x154 * x86 - 0.17415 * x158
    x453 = -x135 * x157 - 0.17415 * x162
    x454 = -x173 * x443 - x183 * x86
    x455 = -x188 * x443 - x195 * x86
    x456 = -x200 * x443 - x206 * x86
    x457 = -x209 * x443 - x210 * x86
    x458 = -x213 * x443 - x217 * x86
    x459 = -x221 * x443 - x222 * x86
    x460 = -x135 * x241 - x230 * x443 - x238 * x86 - 0.17415 * x244
    x461 = -x135 * x258 - x255 * x86 - 0.17415 * x261
    x462 = -x135 * x271 - x265 * x443 - x269 * x86 - 0.17415 * x274
    x463 = -x135 * x280 - x277 * x86 - 0.17415 * x283
    x464 = -x299 * x443 - x304 * x86
    x465 = -x314 * x443 - x320 * x86
    x466 = -x329 * x443 - x334 * x86
    x467 = -x337 * x443 - x339 * x86
    x468 = -x345 * x443 - x348 * x86
    x469 = -x351 * x443 - x353 * x86
    x470 = -x135 * x375 - x363 * x443 - x372 * x86 - 0.17415 * x378
    x471 = -x135 * x397 - x385 * x443 - x394 * x86 - 0.17415 * x400
    x472 = -x135 * x417 - x408 * x443 - x414 * x86 - 0.17415 * x420
    x473 = -x135 * x431 - x423 * x443 - x428 * x86 - 0.17415 * x434
    #
    H_num[:, 0] = 0
    H_num[:, 1] = 0
    H_num[:, 2] = 0
    H_num[:, 3] = 0
    H_num[:, 4] = 0
    H_num[:, 5] = 0
    H_num[:, 6] = 0
    H_num[:, 7] = 0
    H_num[:, 8] = 0
    H_num[:, 9] = 0
    H_num[:, 10] = 0
    H_num[:, 11] = 0
    H_num[:, 12] = 0
    H_num[:, 13] = 0
    H_num[:, 14] = 0
    H_num[:, 15] = 0
    H_num[:, 16] = 0
    H_num[:, 17] = 0
    H_num[:, 18] = 0
    H_num[:, 19] = 0
    H_num[:, 20] = x47
    H_num[:, 21] = x437
    H_num[:, 22] = x438
    H_num[:, 23] = x70
    H_num[:, 24] = x439
    H_num[:, 25] = x440
    H_num[:, 26] = x441
    H_num[:, 27] = 0
    H_num[:, 28] = x442
    H_num[:, 29] = 0
    H_num[:, 30] = x444
    H_num[:, 31] = x445
    H_num[:, 32] = x446
    H_num[:, 33] = x447
    H_num[:, 34] = x448
    H_num[:, 35] = x449
    H_num[:, 36] = x450
    H_num[:, 37] = x451
    H_num[:, 38] = x452
    H_num[:, 39] = x453
    H_num[:, 40] = x454
    H_num[:, 41] = x455
    H_num[:, 42] = x456
    H_num[:, 43] = x457
    H_num[:, 44] = x458
    H_num[:, 45] = x459
    H_num[:, 46] = x460
    H_num[:, 47] = x461
    H_num[:, 48] = x462
    H_num[:, 49] = x463
    H_num[:, 50] = x464
    H_num[:, 51] = x465
    H_num[:, 52] = x466
    H_num[:, 53] = x467
    H_num[:, 54] = x468
    H_num[:, 55] = x469
    H_num[:, 56] = x470
    H_num[:, 57] = x471
    H_num[:, 58] = x472
    H_num[:, 59] = x473
    H_num[:, 60] = dq[:, 2]
    H_num[:, 61] = torch.sign(dq[:, 2])
    #
    return H_num
